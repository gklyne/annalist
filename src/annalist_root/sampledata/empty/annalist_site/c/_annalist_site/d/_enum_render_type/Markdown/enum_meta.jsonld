{ "@id":                "_enum_render_type/Markdown"
, "@type":              ["annal:Enum_render_type", "annal:Enum"]
, "@context":           [{"@base": "../../"}, "../../coll_context.jsonld"]
, "annal:id":           "Markdown"
, "annal:type_id":      "_enum_render_type"
, "rdfs:label":         "Markdown rich text"
, "rdfs:comment":       "# Render type: Markdown rich text\r\n\r\nText value rendered for viewing as rich text, with formatting described using Markdown conventions.\r\n\r\n## Substitutions\r\n\r\nIn addition to text formatting, text substitutions are made for the following patterns found in the field value text.  These substitutions are mainly intended to make it easier to place links to collection data in the field text, but other uses may introduced later.\r\n\r\n* `$$name` followed by a non-alphanumeric character other than '_' or ':'.\r\n* `$$name:`\r\n*  `$$[curie]`\r\n*  `$$$$`\r\n\r\nIn the first two, `name` consists of a sequence of alphabetic, numeric or '_' \r\ncharacters.  In the third pattern, `curie` may contain several additional characters that may occur \r\nin a compact URI (CURIE).\r\n\r\nThe final pattern is an escape sequence for inserting a single '$' into the output \r\nwhich might otherwise be treated as a value substitution.\r\n\r\nThe substituted values are taken from Annalist's internal \"display context\", which contains many values.  Specific values for creating links are:\r\n\r\n* `$$HOST` - URL for the host running the current Annalist site.\r\n* `$$SITE` - URL path for the the current Annalist site.\r\n* `$$COLL` - URL path for the the current Annalist collection.\r\n* `$$BASE:` - base URL path for entities in the current collection.  Use this to create links to entities in the following form: `$$BASE:type_id/entity_id` \r\n\r\nIf no corresponding context value is found for a substitution pattern, the pattern is\r\ncopied as-is to the output.  Any other occurrence of `$` (i.e. not part of any pattern described above) is unchanged.\r\n"
, "annal:uri":          "annal:Enum_render_type/Markdown"
}
